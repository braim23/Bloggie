@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager


@model Bloggie.Web.Models.ViewModels.BlogDetailsViewModel

@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5 ">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @* @if(Model != null) *@
            @* { *@
            <h1 class="mb-3"> @Model.Heading </h1>
            <div class="d-flex justify-content-between mb-3">
                <span class="text-secondary">@Model.Author</span>
                <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
            </div>

            <div class="mb-3">
                @* @if (Model.Liked)
                {
                    <a id="" style="cursor:pointer;">
                        <i class="bi bi-heart-fill"></i>
                    </a>
                }
                else
                {
                    <a id="btnLike" style="cursor:pointer;">
                        <i class="bi bi-heart"></i>
                    </a>
                }


                <span id="totalLikes">@Model.TotalLikes</span> likes *@

                    <a id="heartLink" style="cursor:pointer"  >
                        <i id="heartIcon" class="bi bi-heart"></i>
                        <span id="counter">0</span>
                    </a>

                
            </div>
            <div class="mb-3 d-flex">
                @foreach (var tag in Model.Tags)
                {
                    <span class="badge bg-secondary me-1">@tag.Name</span>
                }
            </div>
            <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />
            <div class="mb-3 blog-details-content">
                @Html.Raw(Model.Content)
            </div>


            <div class="card">
                <div class="card-header">
                    <h5>Comments</h5>
                    @if (signInManager.IsSignedIn(User))
                    {
                        <form method="post">
                            <div class="mb-3">
                                <label class="form-label">Write your comment:</label>
                                <input type="text" class="form-control" asp-for="CommentInput" />
                                <input type="hidden" asp-for="Id" />
                                <input type="hidden" asp-for="UrlHandle" />
                            </div>

                            <div class="mb-3">
                                <button type="submit" class="btn btn-primary">Comment</button>
                            </div>
                        </form>
                    }
                </div>
                <div class="card-body">
                    @*  @if(Model.Comments != null && Model.Comments.Any())
                    { *@

                    @foreach (var comment in Model.Comments)
                    {
                        <div class="card mb-3">

                            <div class="card-body">
                                <div>
                                    @comment.Text
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span class="text-secondary">@comment.Username</span>
                                    <span class="text-secondary">@comment.DateTimeAdded.ToShortDateString()</span>
                                </div>
                            </div>
                        </div>
                    }
                   
                    @* } *@
                </div>
            </div>






            @* } *@
            @* else
            {
            <p>Blog Post not found!</p>
            } *@
        </div>
    </div>
</div>


@section Scripts {
    <script>
        


        // const btnLikeElement = document.getElementById('btnLike');
        // const totalLikeElement = document.getElementById('totalLikes');


        // async function getTotalLikes() {
        //     fetch('/api/BlogPostLike/@Model.Id/totalLikes', {
        //         method: "GET",
        //         headers: {
        //             'Content-Type': 'application/json',
        //             'Accept': '*/*'
        //         }
        //     }).then(data => data.json())
        //         .then(result => totalLikeElement.innerHTML = result);
        // }



        // async function addLikeForBlog() {
        //     fetch('/api/BlogPostLike/Add', {
        //         method: 'POST',
        //         headers: {
        //             'Content-Type': 'application/json',
        //             'Accept': '*/*'
        //         },
        //         body: JSON.stringify({
        //             blogPostId: '@Model.Id', userId: '@userManager.GetUserId(User)'
        //         })
        //     }).then(() => {
        //         btnLikeElement.innerHTML = '<i class="bi bi-heart-fill"></i>';
        //         btnLikeElement.removeEventListener('click', addLikeForBlog);
        //         getTotalLikes();
        //     });
        // }


        // btnLikeElement.addEventListener('click', addLikeForBlog)
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-mQ93GR66B00ZXjt0YO5KlohRA5SY2XofmIkP5L/8iDkNTZ0I4DktP" crossorigin="anonymous"></script>

    <script>
        // JavaScript to handle the heart icon toggle and counter
        var isHeartFilled = false;
        var counterValue = 0;

        document.getElementById('heartLink').addEventListener('click', function (event) {
            event.preventDefault(); // Prevent the default anchor behavior

            var heartIcon = document.getElementById('heartIcon');
            var counter = document.getElementById('counter');

            if (isHeartFilled) {
                heartIcon.classList.remove('bi-heart-fill');
                heartIcon.classList.add('bi-heart');
                counterValue--;
            } else {
                heartIcon.classList.remove('bi-heart');
                heartIcon.classList.add('bi-heart-fill');
                counterValue++;
            }

            isHeartFilled = !isHeartFilled;
            counter.textContent = counterValue;
        });
    </script>
}